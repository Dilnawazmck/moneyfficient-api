{"version":3,"sources":["webpack:///./routes/home/index.js","webpack:///../src/util.js","webpack:///../src/suspense.js","webpack:///../src/suspense-list.js","webpack:///../src/render.js","webpack:///../src/forwardRef.js","webpack:///../src/PureComponent.js","webpack:///../src/portals.js","webpack:///../src/events.js"],"names":["Home","dispatch","useContext","AuthContext","style","onClick","type","payload","assign","obj","props","i","shallowDiffers","a","b","detachedClone","vnode","_component","_children","map","Suspense","_pendingSuspensionCount","_suspenders","_detachOnNextRender","suspended","component","_parent","_suspended","SuspenseList","_next","_map","setSafeDescriptor","proto","key","Object","defineProperty","configurable","get","this","set","v","oldVNodeHook","isPureReactComponent","e","t","shouldComponentUpdate","state","Component","options","_forwarded","ref","oldCatchError","_catchError","error","newVNode","oldVNode","then","_childDidSuspend","prototype","promise","suspendingComponent","c","push","resolve","_vnode","resolved","onResolved","onSuspensionComplete","_suspendedComponentWillUnmount","componentWillUnmount","setState","pop","forceUpdate","render","createElement","children","fallback","list","child","node","delete","revealOrder","size","length","delegated","wrappedUnsuspend","unsuspend","Map","toChildArray","reverse","componentDidUpdate","componentDidMount","forEach","ContextProvider","getChildContext","context","CAMEL_PROPS","isReactComponent","REACT_ELEMENT_TYPE","Symbol","for","oldEventHook","event","persist","nativeEvent","classNameDescriptor","class","$$typeof","className","enumerable","shouldSanitize","attrs","defaultValue","value","Array","isArray","multiple","indexOf","selected","test","replace","toLowerCase","newProps","ondoubleclick","ondblclick","onbeforeinput","onchange","normalized","oninput","_patchedLifecycles"],"mappings":"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","file":"route-home.chunk.bce00.js","sourcesContent":["import { h } from 'preact';\r\nimport { useContext } from 'preact/compat';\r\nimport { AuthContext } from '../../index';\r\n\r\n\r\nconst Home = () => {\r\n\tconst { dispatch } = useContext(AuthContext);\r\n\tfunction logout () {\r\n\t\tdispatch({ type: 'logout', payload: {} });\r\n\t}\r\n\treturn (\r\n\t\t<div style=\"text-align: center;\">\r\n\t\t\t<p>You are on the Homepage</p>\r\n\t\t\t<button\r\n\t\t\t\tonClick={logout}\r\n\t\t\t> Logout\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Check if two objects have a different shape\n * @param {object} a\n * @param {object} b\n * @returns {boolean}\n */\nexport function shallowDiffers(a, b) {\n\tfor (let i in a) if (i !== '__source' && !(i in b)) return true;\n\tfor (let i in b) if (i !== '__source' && a[i] !== b[i]) return true;\n\treturn false;\n}\n","import { Component, createElement, options } from 'preact';\nimport { assign } from './util';\n\nconst oldCatchError = options._catchError;\noptions._catchError = function(error, newVNode, oldVNode) {\n\tif (error.then) {\n\t\t/** @type {import('./internal').Component} */\n\t\tlet component;\n\t\tlet vnode = newVNode;\n\n\t\tfor (; (vnode = vnode._parent); ) {\n\t\t\tif ((component = vnode._component) && component._childDidSuspend) {\n\t\t\t\t// Don't call oldCatchError if we found a Suspense\n\t\t\t\treturn component._childDidSuspend(error, newVNode._component);\n\t\t\t}\n\t\t}\n\t}\n\toldCatchError(error, newVNode, oldVNode);\n};\n\nfunction detachedClone(vnode) {\n\tif (vnode) {\n\t\tvnode = assign({}, vnode);\n\t\tvnode._component = null;\n\t\tvnode._children = vnode._children && vnode._children.map(detachedClone);\n\t}\n\treturn vnode;\n}\n\n// having custom inheritance instead of a class here saves a lot of bytes\nexport function Suspense(props) {\n\t// we do not call super here to golf some bytes...\n\tthis._pendingSuspensionCount = 0;\n\tthis._suspenders = null;\n\tthis._detachOnNextRender = null;\n}\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspense.prototype = new Component();\n\n/**\n * @param {Promise} promise The thrown promise\n * @param {Component<any, any>} suspendingComponent The suspending component\n */\nSuspense.prototype._childDidSuspend = function(promise, suspendingComponent) {\n\t/** @type {import('./internal').SuspenseComponent} */\n\tconst c = this;\n\n\tif (c._suspenders == null) {\n\t\tc._suspenders = [];\n\t}\n\tc._suspenders.push(suspendingComponent);\n\n\tconst resolve = suspended(c._vnode);\n\n\tlet resolved = false;\n\tconst onResolved = () => {\n\t\tif (resolved) return;\n\n\t\tresolved = true;\n\n\t\tif (resolve) {\n\t\t\tresolve(onSuspensionComplete);\n\t\t} else {\n\t\t\tonSuspensionComplete();\n\t\t}\n\t};\n\n\tsuspendingComponent._suspendedComponentWillUnmount =\n\t\tsuspendingComponent.componentWillUnmount;\n\tsuspendingComponent.componentWillUnmount = () => {\n\t\tonResolved();\n\n\t\tif (suspendingComponent._suspendedComponentWillUnmount) {\n\t\t\tsuspendingComponent._suspendedComponentWillUnmount();\n\t\t}\n\t};\n\n\tconst onSuspensionComplete = () => {\n\t\tif (!--c._pendingSuspensionCount) {\n\t\t\tc._vnode._children[0] = c.state._suspended;\n\t\t\tc.setState({ _suspended: (c._detachOnNextRender = null) });\n\n\t\t\tlet suspended;\n\t\t\twhile ((suspended = c._suspenders.pop())) {\n\t\t\t\tsuspended.forceUpdate();\n\t\t\t}\n\t\t}\n\t};\n\n\tif (!c._pendingSuspensionCount++) {\n\t\tc.setState({ _suspended: (c._detachOnNextRender = c._vnode._children[0]) });\n\t}\n\tpromise.then(onResolved, onResolved);\n};\n\nSuspense.prototype.render = function(props, state) {\n\tif (this._detachOnNextRender) {\n\t\tthis._vnode._children[0] = detachedClone(this._detachOnNextRender);\n\t\tthis._detachOnNextRender = null;\n\t}\n\n\treturn [\n\t\tcreateElement(Component, null, state._suspended ? null : props.children),\n\t\tstate._suspended && props.fallback\n\t];\n};\n\n/**\n * Checks and calls the parent component's _suspended method, passing in the\n * suspended vnode. This is a way for a parent (e.g. SuspenseList) to get notified\n * that one of its children/descendants suspended.\n *\n * The parent MAY return a callback. The callback will get called when the\n * suspension resolves, notifying the parent of the fact.\n * Moreover, the callback gets function `unsuspend` as a parameter. The resolved\n * child descendant will not actually get unsuspended until `unsuspend` gets called.\n * This is a way for the parent to delay unsuspending.\n *\n * If the parent does not return a callback then the resolved vnode\n * gets unsuspended immediately when it resolves.\n *\n * @param {import('../src/internal').VNode} vnode\n * @returns {((unsuspend: () => void) => void)?}\n */\nexport function suspended(vnode) {\n\tlet component = vnode._parent._component;\n\treturn component && component._suspended && component._suspended(vnode);\n}\n\nexport function lazy(loader) {\n\tlet prom;\n\tlet component;\n\tlet error;\n\n\tfunction Lazy(props) {\n\t\tif (!prom) {\n\t\t\tprom = loader();\n\t\t\tprom.then(\n\t\t\t\texports => {\n\t\t\t\t\tcomponent = exports.default || exports;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\terror = e;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\n\t\tif (!component) {\n\t\t\tthrow prom;\n\t\t}\n\n\t\treturn createElement(component, props);\n\t}\n\n\tLazy.displayName = 'Lazy';\n\tLazy._forwarded = true;\n\treturn Lazy;\n}\n","import { Component, toChildArray } from 'preact';\nimport { suspended } from './suspense.js';\n\n// Indexes to linked list nodes (nodes are stored as arrays to save bytes).\nconst SUSPENDED_COUNT = 0;\nconst RESOLVED_COUNT = 1;\nconst NEXT_NODE = 2;\n\n// Having custom inheritance instead of a class here saves a lot of bytes.\nexport function SuspenseList() {\n\tthis._next = null;\n\tthis._map = null;\n}\n\n// Mark one of child's earlier suspensions as resolved.\n// Some pending callbacks may become callable due to this\n// (e.g. the last suspended descendant gets resolved when\n// revealOrder === 'together'). Process those callbacks as well.\nconst resolve = (list, child, node) => {\n\tif (++node[RESOLVED_COUNT] === node[SUSPENDED_COUNT]) {\n\t\t// The number a child (or any of its descendants) has been suspended\n\t\t// matches the number of times it's been resolved. Therefore we\n\t\t// mark the child as completely resolved by deleting it from ._map.\n\t\t// This is used to figure out when *all* children have been completely\n\t\t// resolved when revealOrder is 'together'.\n\t\tlist._map.delete(child);\n\t}\n\n\t// If revealOrder is falsy then we can do an early exit, as the\n\t// callbacks won't get queued in the node anyway.\n\t// If revealOrder is 'together' then also do an early exit\n\t// if all suspended descendants have not yet been resolved.\n\tif (\n\t\t!list.props.revealOrder ||\n\t\t(list.props.revealOrder[0] === 't' && list._map.size)\n\t) {\n\t\treturn;\n\t}\n\n\t// Walk the currently suspended children in order, calling their\n\t// stored callbacks on the way. Stop if we encounter a child that\n\t// has not been completely resolved yet.\n\tnode = list._next;\n\twhile (node) {\n\t\twhile (node.length > 3) {\n\t\t\tnode.pop()();\n\t\t}\n\t\tif (node[RESOLVED_COUNT] < node[SUSPENDED_COUNT]) {\n\t\t\tbreak;\n\t\t}\n\t\tlist._next = node = node[NEXT_NODE];\n\t}\n};\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspenseList.prototype = new Component();\n\nSuspenseList.prototype._suspended = function(child) {\n\tconst list = this;\n\tconst delegated = suspended(list._vnode);\n\n\tlet node = list._map.get(child);\n\tnode[SUSPENDED_COUNT]++;\n\n\treturn unsuspend => {\n\t\tconst wrappedUnsuspend = () => {\n\t\t\tif (!list.props.revealOrder) {\n\t\t\t\t// Special case the undefined (falsy) revealOrder, as there\n\t\t\t\t// is no need to coordinate a specific order or unsuspends.\n\t\t\t\tunsuspend();\n\t\t\t} else {\n\t\t\t\tnode.push(unsuspend);\n\t\t\t\tresolve(list, child, node);\n\t\t\t}\n\t\t};\n\t\tif (delegated) {\n\t\t\tdelegated(wrappedUnsuspend);\n\t\t} else {\n\t\t\twrappedUnsuspend();\n\t\t}\n\t};\n};\n\nSuspenseList.prototype.render = function(props) {\n\tthis._next = null;\n\tthis._map = new Map();\n\n\tconst children = toChildArray(props.children);\n\tif (props.revealOrder && props.revealOrder[0] === 'b') {\n\t\t// If order === 'backwards' (or, well, anything starting with a 'b')\n\t\t// then flip the child list around so that the last child will be\n\t\t// the first in the linked list.\n\t\tchildren.reverse();\n\t}\n\t// Build the linked list. Iterate through the children in reverse order\n\t// so that `_next` points to the first linked list node to be resolved.\n\tfor (let i = children.length; i--; ) {\n\t\t// Create a new linked list node as an array of form:\n\t\t// \t[suspended_count, resolved_count, next_node]\n\t\t// where suspended_count and resolved_count are numeric counters for\n\t\t// keeping track how many times a node has been suspended and resolved.\n\t\t//\n\t\t// Note that suspended_count starts from 1 instead of 0, so we can block\n\t\t// processing callbacks until componentDidMount has been called. In a sense\n\t\t// node is suspended at least until componentDidMount gets called!\n\t\t//\n\t\t// Pending callbacks are added to the end of the node:\n\t\t// \t[suspended_count, resolved_count, next_node, callback_0, callback_1, ...]\n\t\tthis._map.set(children[i], (this._next = [1, 0, this._next]));\n\t}\n\treturn props.children;\n};\n\nSuspenseList.prototype.componentDidUpdate = SuspenseList.prototype.componentDidMount = function() {\n\t// Iterate through all children after mounting for two reasons:\n\t// 1. As each node[SUSPENDED_COUNT] starts from 1, this iteration increases\n\t//    each node[RELEASED_COUNT] by 1, therefore balancing the counters.\n\t//    The nodes can now be completely consumed from the linked list.\n\t// 2. Handle nodes that might have gotten resolved between render and\n\t//    componentDidMount.\n\tconst list = this;\n\tlist._map.forEach((node, child) => {\n\t\tresolve(list, child, node);\n\t});\n};\n","import {\n\trender as preactRender,\n\toptions,\n\ttoChildArray,\n\tComponent\n} from 'preact';\nimport { applyEventNormalization } from './events';\n\nconst CAMEL_PROPS = /^(?:accent|alignment|arabic|baseline|cap|color|fill|flood|font|glyph|horiz|marker|overline|paint|stop|strikethrough|stroke|text|underline|unicode|units|v|vector|vert|word|writing|x)[A-Z]/;\n\n// Some libraries like `react-virtualized` explicitly check for this.\nComponent.prototype.isReactComponent = {};\n\nexport const REACT_ELEMENT_TYPE =\n\t(typeof Symbol !== 'undefined' &&\n\t\tSymbol.for &&\n\t\tSymbol.for('react.element')) ||\n\t0xeac7;\n\n/**\n * Proxy render() since React returns a Component reference.\n * @param {import('./internal').VNode} vnode VNode tree to render\n * @param {import('./internal').PreactElement} parent DOM node to render vnode tree into\n * @param {() => void} [callback] Optional callback that will be called after rendering\n * @returns {import('./internal').Component | null} The root component reference or null\n */\nexport function render(vnode, parent, callback) {\n\t// React destroys any existing DOM nodes, see #1727\n\t// ...but only on the first render, see #1828\n\tif (parent._children == null) {\n\t\twhile (parent.firstChild) {\n\t\t\tparent.removeChild(parent.firstChild);\n\t\t}\n\t}\n\n\treturn hydrate(vnode, parent, callback);\n}\n\nexport function hydrate(vnode, parent, callback) {\n\tpreactRender(vnode, parent);\n\tif (typeof callback === 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nlet oldEventHook = options.event;\noptions.event = e => {\n\tif (oldEventHook) e = oldEventHook(e);\n\te.persist = () => {};\n\treturn (e.nativeEvent = e);\n};\n\n// Patch in `UNSAFE_*` lifecycle hooks\nfunction setSafeDescriptor(proto, key) {\n\tif (proto['UNSAFE_' + key] && !proto[key]) {\n\t\tObject.defineProperty(proto, key, {\n\t\t\tconfigurable: false,\n\t\t\tget() {\n\t\t\t\treturn this['UNSAFE_' + key];\n\t\t\t},\n\t\t\t// This `set` is only used if a user sets a lifecycle like cWU\n\t\t\t// after setting a lifecycle like UNSAFE_cWU. I doubt anyone\n\t\t\t// actually does this in practice so not testing it\n\t\t\t/* istanbul ignore next */\n\t\t\tset(v) {\n\t\t\t\tthis['UNSAFE_' + key] = v;\n\t\t\t}\n\t\t});\n\t}\n}\n\nlet classNameDescriptor = {\n\tconfigurable: true,\n\tget() {\n\t\treturn this.class;\n\t}\n};\n\nlet oldVNodeHook = options.vnode;\noptions.vnode = vnode => {\n\tvnode.$$typeof = REACT_ELEMENT_TYPE;\n\n\tlet type = vnode.type;\n\tlet props = vnode.props;\n\n\t// Alias `class` prop to `className` if available\n\tif (props.class != props.className) {\n\t\tclassNameDescriptor.enumerable = 'className' in props;\n\t\tif (props.className != null) props.class = props.className;\n\t\tObject.defineProperty(props, 'className', classNameDescriptor);\n\t}\n\n\t// Apply DOM VNode compat\n\tif (typeof type != 'function') {\n\t\t// Apply defaultValue to value\n\t\tif (props.defaultValue) {\n\t\t\tif (!props.value && props.value !== 0) {\n\t\t\t\tprops.value = props.defaultValue;\n\t\t\t}\n\t\t\tdelete props.defaultValue;\n\t\t}\n\n\t\t// Add support for array select values: <select value={[]} />\n\t\tif (Array.isArray(props.value) && props.multiple && type === 'select') {\n\t\t\ttoChildArray(props.children).forEach(child => {\n\t\t\t\tif (props.value.indexOf(child.props.value) != -1) {\n\t\t\t\t\tchild.props.selected = true;\n\t\t\t\t}\n\t\t\t});\n\t\t\tdelete props.value;\n\t\t}\n\n\t\t// Normalize DOM vnode properties.\n\t\tlet shouldSanitize, attrs, i;\n\t\tfor (i in props) if ((shouldSanitize = CAMEL_PROPS.test(i))) break;\n\t\tif (shouldSanitize) {\n\t\t\tattrs = vnode.props = {};\n\t\t\tfor (i in props) {\n\t\t\t\tattrs[\n\t\t\t\t\tCAMEL_PROPS.test(i) ? i.replace(/([A-Z0-9])/, '-$1').toLowerCase() : i\n\t\t\t\t] = props[i];\n\t\t\t}\n\t\t}\n\t}\n\n\t// Events\n\tapplyEventNormalization(vnode);\n\n\t// Component base class compat\n\t// We can't just patch the base component class, because components that use\n\t// inheritance and are transpiled down to ES5 will overwrite our patched\n\t// getters and setters. See #1941\n\tif (\n\t\ttypeof type === 'function' &&\n\t\t!type._patchedLifecycles &&\n\t\ttype.prototype\n\t) {\n\t\tsetSafeDescriptor(type.prototype, 'componentWillMount');\n\t\tsetSafeDescriptor(type.prototype, 'componentWillReceiveProps');\n\t\tsetSafeDescriptor(type.prototype, 'componentWillUpdate');\n\t\ttype._patchedLifecycles = true;\n\t}\n\n\tif (oldVNodeHook) oldVNodeHook(vnode);\n};\n","import { options } from 'preact';\nimport { assign } from './util';\n\nlet oldVNodeHook = options.vnode;\noptions.vnode = vnode => {\n\tif (vnode.type && vnode.type._forwarded && vnode.ref) {\n\t\tvnode.props.ref = vnode.ref;\n\t\tvnode.ref = null;\n\t}\n\n\tif (oldVNodeHook) oldVNodeHook(vnode);\n};\n\n/**\n * Pass ref down to a child. This is mainly used in libraries with HOCs that\n * wrap components. Using `forwardRef` there is an easy way to get a reference\n * of the wrapped component instead of one of the wrapper itself.\n * @param {import('./index').ForwardFn} fn\n * @returns {import('./internal').FunctionalComponent}\n */\nexport function forwardRef(fn) {\n\tfunction Forwarded(props) {\n\t\tlet clone = assign({}, props);\n\t\tdelete clone.ref;\n\t\treturn fn(clone, props.ref);\n\t}\n\tForwarded.prototype.isReactComponent = true;\n\tForwarded._forwarded = true;\n\tForwarded.displayName = 'ForwardRef(' + (fn.displayName || fn.name) + ')';\n\treturn Forwarded;\n}\n","import { Component } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Component class with a predefined `shouldComponentUpdate` implementation\n */\nexport class PureComponent extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t// Some third-party libraries check if this property is present\n\t\tthis.isPureReactComponent = true;\n\t}\n\n\tshouldComponentUpdate(props, state) {\n\t\treturn (\n\t\t\tshallowDiffers(this.props, props) || shallowDiffers(this.state, state)\n\t\t);\n\t}\n}\n","import { createElement, hydrate, render, _unmount } from 'preact';\n\nclass ContextProvider {\n\tgetChildContext() {\n\t\treturn this.props.context;\n\t}\n\trender(props) {\n\t\treturn props.children;\n\t}\n}\n\n/**\n * Portal component\n * @param {object | null | undefined} props\n */\nfunction Portal(props) {\n\tlet _this = this;\n\tlet container = props.container;\n\tlet wrap = createElement(\n\t\tContextProvider,\n\t\t{ context: _this.context },\n\t\tprops.vnode\n\t);\n\n\t// When we change container we should clear our old container and\n\t// indicate a new mount.\n\tif (_this._container && _this._container !== container) {\n\t\tif (_this._temp.parentNode) _this._container.removeChild(_this._temp);\n\t\t_unmount(_this._wrap);\n\t\t_this._hasMounted = false;\n\t}\n\n\t// When props.vnode is undefined/false/null we are dealing with some kind of\n\t// conditional vnode. This should not trigger a render.\n\tif (props.vnode) {\n\t\tif (!_this._hasMounted) {\n\t\t\t// Create a placeholder that we can use to insert into.\n\t\t\t_this._temp = document.createTextNode('');\n\t\t\t// Hydrate existing nodes to keep the dom intact, when rendering\n\t\t\t// wrap into the container.\n\t\t\thydrate('', container);\n\t\t\t// Append to the container (this matches React's behavior)\n\t\t\tcontainer.appendChild(_this._temp);\n\t\t\t// At this point we have mounted and should set our container.\n\t\t\t_this._hasMounted = true;\n\t\t\t_this._container = container;\n\t\t\t// Render our wrapping element into temp.\n\t\t\trender(wrap, container, _this._temp);\n\t\t\t_this._children = this._temp._children;\n\t\t} else {\n\t\t\t// When we have mounted and the vnode is present it means the\n\t\t\t// props have changed or a parent is triggering a rerender.\n\t\t\t// This implies we only need to call render. But we need to keep\n\t\t\t// the old tree around, otherwise will treat the vnodes as new and\n\t\t\t// will wrongly call `componentDidMount` on them\n\t\t\tcontainer._children = _this._children;\n\t\t\trender(wrap, container);\n\t\t\t_this._children = container._children;\n\t\t}\n\t}\n\t// When we come from a conditional render, on a mounted\n\t// portal we should clear the DOM.\n\telse if (_this._hasMounted) {\n\t\tif (_this._temp.parentNode) _this._container.removeChild(_this._temp);\n\t\t_unmount(_this._wrap);\n\t}\n\t// Set the wrapping element for future unmounting.\n\t_this._wrap = wrap;\n\n\t_this.componentWillUnmount = () => {\n\t\tif (_this._temp.parentNode) _this._container.removeChild(_this._temp);\n\t\t_unmount(_this._wrap);\n\t};\n\n\treturn null;\n}\n\n/**\n * Create a `Portal` to continue rendering the vnode tree at a different DOM node\n * @param {import('./internal').VNode} vnode The vnode to render\n * @param {import('./internal').PreactElement} container The DOM node to continue rendering in to.\n */\nexport function createPortal(vnode, container) {\n\treturn createElement(Portal, { vnode, container });\n}\n","/**\n * Normalize event handlers like react does. Most famously it uses `onChange` for any input element.\n * @param {import('./internal').VNode} vnode The vnode to normalize events on\n */\nexport function applyEventNormalization({ type, props }) {\n\tif (!props || typeof type != 'string') return;\n\tlet newProps = {};\n\n\tfor (let i in props) {\n\t\tif (/^on(Ani|Tra|Tou)/.test(i)) {\n\t\t\tprops[i.toLowerCase()] = props[i];\n\t\t\tdelete props[i];\n\t\t}\n\t\tnewProps[i.toLowerCase()] = i;\n\t}\n\tif (newProps.ondoubleclick) {\n\t\tprops.ondblclick = props[newProps.ondoubleclick];\n\t\tdelete props[newProps.ondoubleclick];\n\t}\n\tif (newProps.onbeforeinput) {\n\t\tprops.onbeforeinput = props[newProps.onbeforeinput];\n\t\tdelete props[newProps.onbeforeinput];\n\t}\n\t// for *textual inputs* (incl textarea), normalize `onChange` -> `onInput`:\n\tif (\n\t\tnewProps.onchange &&\n\t\t(type === 'textarea' ||\n\t\t\t(type.toLowerCase() === 'input' && !/^fil|che|ra/i.test(props.type)))\n\t) {\n\t\tlet normalized = newProps.oninput || 'oninput';\n\t\tif (!props[normalized]) {\n\t\t\tprops[normalized] = props[newProps.onchange];\n\t\t\tdelete props[newProps.onchange];\n\t\t}\n\t}\n}\n"],"sourceRoot":""}